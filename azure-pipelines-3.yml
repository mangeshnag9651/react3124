trigger:
- none
 
parameters:
- name: DeployASG
  displayName: 'Select the ASG for deployment'
  type: string
  default: 'blue'
  values:
  - blue
  - green
 
- name: DesiredCapacity
  displayName: 'Desired instance count'
  type: number
  default: 2
variables:
  aws_region: 'us-west-2'
  tf_version: '1.0.0'
 
stages:
- stage: Deploy
  jobs:
  - job: DeployInfrastructure
    displayName: Deploy Infrastructure to $(DeployASG) ASG
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - script: |
        echo "##[section]Installing Python and AWS CLI"
        sudo apt-get update
        sudo apt-get install -y python3 python3-pip
        python3 -m pip install --upgrade pip
        pip3 install awscli
      displayName: 'Install Python and AWS CLI'
 
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.x'
 
    - task: TerraformInstaller@0
      inputs:
        terraformVersion: '$(tf_version)'
 
    - script: terraform init
      displayName: 'Terraform Init'
      workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
    
    - script: terraform validate
      displayName: 'Terraform Validate'
      workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
 
    - script: |
        echo "##[section]Applying Terraform configuration to $(DeployASG) ASG"
        terraform apply -auto-approve -var="deploy_asg=$(DeployASG)"
      displayName: 'Terraform Apply'
      workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
      env:
        AWS_DEFAULT_REGION: $(aws_region)
        AWS_ACCESS_KEY_ID: $(awsServiceConnection.AWS_ACCESS_KEY_ID)
        AWS_SECRET_ACCESS_KEY: $(awsServiceConnection.AWS_SECRET_ACCESS_KEY)