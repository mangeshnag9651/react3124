# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

# parameters:
# - name: branchName
#   displayName: 'Branch Name'
#   type: string
#   default: 'main'

# pool:
#   vmImage: ubuntu-latest

# # variables:
# #   branchToTrigger: ${{ parameters.branchName }}

# trigger:
#   batch: true
#   branches:
#     include:
#     # - ${{ variables.branchToTrigger}}
#     # - ${{ parameters.branchName }}
#     - $(branchName)
# parameters:
# - name: targetBranch
#   type: string
#   default: ' '  # Default branch
 
# jobs:
# - job: YourJobName
#   displayName: Your Job Display Name
#   pool:
#     vmImage: 'ubuntu-latest'
#   steps:
#   - checkout: self
#     clean: true
#     persistCredentials: true
#     fetchDepth: 1
#     # ref: 'refs/heads/$(targetBranch)'
#   - script: echo "Running on branch $(targetBranch)"
# stages:
# - stage: Build
#   displayName: Build Stage
#   jobs:
#   - job: BuildJob
#     displayName: Build Job

#     steps:
#     - script: echo "Building branch:$(branchName)"
#       displayName: 'Build on $(branchName) branch'
jobs:
- job: YourJobName
  displayName: Your Job Display Name
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - script: echo "Enter the branch name:"
    displayName: 'Prompt user for branch name'
    env:
      BRANCH_NAME: $(Build.SourceBranchName)
 
  - script: echo "Running on branch $(BRANCH_NAME)"
  - task: NodeTool@0
    inputs:
      versionSpec: '14.x'
    displayName: 'Install Node.js'

  - script: |
      npm install
      npm run build
    displayName: 'Build React Application'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.SourcesDirectory)/build'
      ArtifactName: 'react-app'
    displayName: 'Publish Artifact'

  - bash: |
          ls
          pwd
          cd $(Build.SourcesDirectory)/build
          cp /home/vsts/work/1/s/appspec.yml .
          cp -r /home/vsts/work/1/s/before_install.sh .
          cp -r /home/vsts/work/1/s/applicationStart.sh .
          cp -r /home/vsts/work/1/s/install.sh .
          ls
          zip -r react-build.zip *
          pwd
          ls 
    displayName: 'Archive build'

  - task: S3Upload@1
    inputs:
      awsCredentials: 'aws-s3-connection'
      regionName: 'ap-south-1'
      bucketName: 'deployment3434'
      sourceFolder: '$(Build.SourcesDirectory)/build'
      globExpressions: 'react-build.zip'
      createBucket: true